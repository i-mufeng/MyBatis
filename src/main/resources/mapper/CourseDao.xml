<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mufeng.dao.CourseDao">

    <resultMap type="com.mufeng.entity.Course" id="CourseMap">
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="courseName" column="course_name" jdbcType="VARCHAR"/>
        <result property="courseContent" column="course_content" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CourseMap">
        select
          course_id, course_name, course_content
        from course
        where course_id = #{courseId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CourseMap">
        select
          course_id, course_name, course_content
        from course
        <where>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="courseName != null and courseName != ''">
                and course_name = #{courseName}
            </if>
            <if test="courseContent != null and courseContent != ''">
                and course_content = #{courseContent}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from course
        <where>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="courseName != null and courseName != ''">
                and course_name = #{courseName}
            </if>
            <if test="courseContent != null and courseContent != ''">
                and course_content = #{courseContent}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="courseId" useGeneratedKeys="true">
        insert into course(course_name, course_content)
        values (#{courseName}, #{courseContent})
    </insert>

    <insert id="insertBatch" keyProperty="courseId" useGeneratedKeys="true">
        insert into course(course_name, course_content)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.courseName}, #{entity.courseContent})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="courseId" useGeneratedKeys="true">
        insert into course(course_name, course_content)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.courseName}, #{entity.courseContent})
        </foreach>
        on duplicate key update
        course_name = values(course_name),
        course_content = values(course_content)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update course
        <set>
            <if test="courseName != null and courseName != ''">
                course_name = #{courseName},
            </if>
            <if test="courseContent != null and courseContent != ''">
                course_content = #{courseContent},
            </if>
        </set>
        where course_id = #{courseId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from course where course_id = #{courseId}
    </delete>

</mapper>

